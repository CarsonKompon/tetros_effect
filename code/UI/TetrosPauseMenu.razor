@using System;
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

@namespace TetrosEffect

<root>
	<div @ref="ContentPanel" class="content">
		<h1>Paused</h1>
		<div class="options">
			<button class="btn resume" onclick=@Resume>Resume</button>
			<button class="btn" onclick=@Settings>Settings</button>
			<button class="btn main-menu" onclick=@ReturnToMainMenu>Return to Main Menu</button>
		</div>
	</div>
</root>

@code
{

	[Property] public bool IsOpen { get; set; } = false;
	public bool IsVisible = true;
	float Alpha = 1f;
	Panel ContentPanel;

	protected override void OnUpdate()
	{
		if (Input.EscapePressed)
		{
			if (!IsOpen)
			{
				IsOpen = true;
			}
			else if (IsVisible)
			{
				IsOpen = false;
			}

			Input.EscapePressed = false;
		}

		if (IsVisible && Alpha < 1f)
		{
			Alpha += RealTime.Delta;
			Alpha = Math.Clamp(Alpha, 0f, 1f);
		}
		else if (!IsVisible && Alpha > 0f)
		{
			Alpha -= RealTime.Delta;
			Alpha = Math.Clamp(Alpha, 0f, 1f);
		}

		Scene.TimeScale = IsOpen ? 0 : 1;
		Panel.Style.Opacity = (IsOpen ? 1 : 0);
		if (ContentPanel.IsValid())
			ContentPanel.Style.Opacity = Alpha;

		SetClass("no-interact", !IsOpen || !IsVisible);
	}

	void Resume()
	{
		IsOpen = false;
	}

	void Settings()
	{
		IsVisible = false;
		var settingsMenu = GameObject.Components.Get<TetrosSettingsMenu>();
		if (settingsMenu is not null)
		{
			settingsMenu.IsVisible = true;
		}
	}

	void ReturnToMainMenu()
	{
		IsVisible = false;
		var fadeOut = GameObject.Components.Create<FadeOutComponent>();
		fadeOut.FadeColor = Color.FromRgb(0x161616);
		fadeOut.FadeTime = 1f;
		fadeOut.OnFadeOut += () =>
		{
			Game.ActiveScene.LoadFromFile("scenes/mainmenu.scene");
		};
	}

	protected override int BuildHash() => System.HashCode.Combine(Alpha);
}